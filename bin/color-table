#!/usr/bin/env node

var argv  = process.argv.slice(2)
  , flags = {}
var CLEAR = '\u001b[39m' // clear foreground
          + '\u001b[49m' // clear background

for (var i = 0; i < argv.length; i++) {
  var arg = argv[i]
  if (arg[0] !== "-") usage()
  for (var c = 1; c < arg.length; c++) flags[arg[c]] = true
}
if (flags.h) usage()

function usage() {
  console.error("usage: color-table [arguments]")
  console.error("flags:")
  console.error("  -h  print usage")
  console.error("  -i  invert colors")
  console.error("  -v  verbose: show 24-bit equivalents")
  process.exit(1)
}

function main() {
  var getColor = makeColorGetter(
    { invert: flags.i
    , base24: flags.v
    })
  console.log((flags.v ? printVerbose : printSimple)(getColor))
}

function printSimple(color) {
  var str = ""
  for (var i = 0; i < 256; i++) {
    if (i && i % 16 === 0) str += "\n"
    str += color(i)
  }
  return str
}

function printVerbose(color) {
  var str = ""
  for (var i = 0; i < 256; i++) {
    if ((i < 16 && i > 0 && i % 8 === 0)
     || (i > 16 && (i-16) % 6 === 0)) str += "\n"
    if (i === 16) str += "\n\n"
    str += color(i)
  }
  return str
}

function makeColorGetter(opts) {
  return function(n) {
    var ansi = opts.invert
             ? '\u001b[48;5;' + n + 'm'
             + '\u001b[38;5;0m' // black foreground
             : '\u001b[38;5;' + n + 'm'
    return ansi + pad3(n)
         + (opts.base24 ? (" " + colorToBase24(n)) : "")
         + CLEAR
         + (opts.base24 ? "  " : " ")
  }
}

function colorToBase24(n) {
  if (n < 16) return colorToBase24_Base(n)
  var rgb = (n < 232 ? colorToBase24_RGB : colorToBase24_Grey)(n)
  return "#" + rgb.map(toHex).join("")
}

function toHex(n) { return pad2(n.toString(16)) }

function colorToBase24_Base(n) {
  return [ "#000000", "#800000", "#008000", "#808000"
         , "#000080", "#800080", "#008080", "#c0c0c0"
         , "#808080", "#ff0000", "#00ff00", "#ffff00"
         , "#0000ff", "#ff00ff", "#00ffff", "#ffffff"
         ][n]
}

// http://stackoverflow.com/questions/27159322/rgb-values-of-the-colors-in-the-ansi-extended-colors-index-17-255
function colorToBase24_RGB(n) {
  var rIndex = Math.floor((n-16) / 36)
    , gIndex = Math.floor(((n-16) % 36) / 6)
    , bIndex = (n-16) % 6
  return [ rIndex > 0 ? 55 + rIndex * 40 : 0
         , gIndex > 0 ? 55 + gIndex * 40 : 0
         , bIndex > 0 ? 55 + bIndex * 40 : 0
         ]
}

function colorToBase24_Grey(n) {
  var rgb = (n-232) * 10 + 8
  return [rgb, rgb, rgb]
}

function pad2(n) { return (n <  10 ? "0" : "") + n }
function pad3(n) { return (n < 100 ? "0" : "") + pad2(n) }

main()
