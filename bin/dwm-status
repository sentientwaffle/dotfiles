#!/usr/bin/env bash

# Update DWM's status bar.

refresh=10
count=0
mic=""
bat=""
con=""
lock=""
used_root=""
used_home=""
mem=""
cpu=""
cpus=$(nproc)

net_down_last=0
net_up_last=0
net_return=""

get_disk_used() {
	local partition=$1
	df -h | grep -o "[0-9]\+% $partition$" | cut -d' ' -f1
}

get_mem() {
	free | awk '/Mem:/ {print 100*($3+$6)/$2}' | cut -d'.' -f1
}

get_cpu() {
	awk "{print \$1 * 100 / $cpus}" < /proc/loadavg | cut -d'.' -f1
}

get_netrate() {
	local prefix='/: /'
	local count='{ down += $2; up += $(NF-7) }'
	local end='END { print down " " up }'
	local net_now=$(awk "$prefix $count $end" < /proc/net/dev)
	local down_now=$(cut -d' ' -f1 <<< $net_now)
	local up_now=$(cut -d' ' -f2 <<< $net_now)

	((down_rate=(down_now - net_down_last) / refresh))
	((up_rate=(up_now - net_up_last) / refresh))

	net_down_last=$down_now
	net_up_last=$up_now
	net_return="↑$(numfmt --to=si <<< $up_rate) ↓$(numfmt --to=si <<< $down_rate)"
}

get_volume() {
	local vol=$(dwm-volume get)
	[[ "$vol" != 'mute' ]] && vol="vol=$vol"
	echo "$vol"
}

get_connection() {
	# Sort so that ethernet has precedence over wireless.
	nmcli c show --active | grep -v 'bridge' | tail -n+2 | awk '{print $NF}' | sort | head -n1
}

get_battery() {
	acpi | head -n1 | grep -o '[[:digit:]]*%'
}

get_locked() {
	if [[ -e '/tmp/autolock' ]]; then
		echo '<span foreground="#e8332e">unlocked</span> '
	fi
}

while true; do
	if ((count == 0)); then
		mic=$(dwm-volume getmic)
		bat=$(get_battery)
		con=$(get_connection)
		lock=$(get_locked)
		used_root=$(get_disk_used '/')
		used_home=$(get_disk_used '/home')
		mem=$(get_mem)
		cpu=$(get_cpu)
		get_netrate
	fi
	stats_volume="<span foreground=\"#33aaff\">$(get_volume)</span>"
	if [[ -z "$mic" ]]; then
		stats_mic=""
	else
		stats_mic="<span foreground=\"#e8332e\">!</span>"
	fi
	# TODO offline should be red
	stats_connection="<span foreground=\"#33ffff\">${con:-offline}</span>"
	stats_battery="<span foreground=\"#00ff33\">bat=$bat</span>"
	stats_used_root="<span foreground=\"#ffff00\">/=$used_root</span>"
	stats_used_home="<span foreground=\"#ffff00\">/home=$used_home</span>"
	stats_mem="<span foreground=\"#ff3399\">mem=$mem%</span>"
	stats_cpu="<span foreground=\"#ff6600\">cpu=$cpu%</span>"
	now="<span foreground=\"#dddddd\">$(date +'%a %b %d %H:%M:%S')</span>"
	stats_netrate="<span foreground=\"#33ffff\">$net_return</span>"

	l1="$lock$stats_volume$stats_mic $stats_used_root $stats_used_home"
	l2="$stats_mem $stats_cpu $stats_netrate"
	l3="$stats_connection $stats_battery $now"
	xsetroot -name "$l1 $l2 $l3"

	((count=(count + 1) % refresh))
	sleep 1
done
