#!/usr/bin/env python
"""

Print the number of unread messages.

"""

import imaplib
import re
from time import time
from sys import exit
import gnomekeyring as gkey

TMP = "/tmp/tmux-gmail.txt"
USERNAME = "sentientwaffle"
INTERVAL = 60
now = int(time())

def tmp(mode):
    """ Get the temp file. """
    return open(TMP, mode)


# Check if the mail needs checking.
try:
    before, count = tmp("r").read().split(":")
    # Just send the cached value back.
    if now - int(before) < INTERVAL:
        print count
        exit(0)
except IOError:
    pass


def get_info():
    """

    Get the gmail password.

    """
    keyring = "login"
    info = None
    for item in gkey.list_item_ids_sync("login"):
        info = gkey.item_get_info_sync(keyring, item)
        if info.get_display_name() == "Gmail":
            break
    return info

def mailbox(username, password):
    """

    Connect to the server.

    """
    m = imaplib.IMAP4_SSL("imap.gmail.com", 993)
    m.login(username, password)
    m.select("Inbox", readonly = True)
    return m

def unread(m):
    """

    Check the mail for the number of unread messages.

    """
    _, res = m.status("Inbox", "(UNSEEN)")
    count = re.search("UNSEEN (\d+)", res[0]).group(1)
    save(count)
    return count

def save(count):
    """

    Cache the results.

    """
    tmp("w").write(str(now) + ":" + str(count))

info = get_info()
if info == None:
    print "?"
else:
    mail = mailbox(USERNAME, info.get_secret())
    print unread(mail)
