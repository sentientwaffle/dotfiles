#!/usr/bin/env python2
"""

Print the number of unread messages.

"""

import imaplib
import re
import subprocess
from time import time
from sys import exit

TMP = "/tmp/tmux-gmail.txt"
USERNAMES = ["sentientwaffle"]
EMAILS = ["sentientwaffle@gmail.com"]
INTERVAL = 60
now = int(time())

def tmp(mode):
    """ Get the temp file. """
    return open(TMP, mode)


# Check if the mail needs checking.
try:
    before, count = tmp("r").read().split(":")
    # Just send the cached value back.
    if now - int(before) < INTERVAL:
        print count
        exit(0)
except IOError:
    pass


def get_passwd(name):
    """

    Get the gmail password.

    """
    return subprocess.check_output(["pass", "google/tmux/" + name])

def mailbox(username, password):
    """

    Connect to the server.

    """
    if password == "":
        return False
    m = imaplib.IMAP4_SSL("imap.gmail.com", 993)
    m.login(username, password)
    m.select("Inbox", readonly = True)
    return m

def unread(m):
    """

    Check the mail for the number of unread messages.

    """
    if not m:
        return "?"
    _, res = m.status("Inbox", "(UNSEEN)")
    count = re.search("UNSEEN (\d+)", res[0]).group(1)
    return count

def save(count):
    """

    Cache the results.

    """
    tmp("w").write(str(now) + ":" + str(count))


passwords = map(get_passwd, EMAILS)
mailboxes = [mailbox(u, p) for (u, p) in zip(USERNAMES, passwords)]
unreads = map(unread, mailboxes)
out = ",".join(unreads)
print out
save(out)
