#!/usr/bin/env python3
"""

Print the number of unread messages.

"""

import imaplib
import re
import subprocess
import sys
from time import time

TMP = "/tmp/tmux-gmail.txt"
USERNAMES = ["sentientwaffle", "dj@ripple.com"]
EMAILS = ["sentientwaffle@gmail.com", "dj@ripple.com"]
INTERVAL = 60
now = int(time())

def tmp(mode):
    """ Get the temp file. """
    return open(TMP, mode)

def error(message):
    print(message, file=sys.stderr)

if "--help" in sys.argv:
    error("Usage: gmail [arguments]")
    error("")
    error("Get unread message counts.")
    error("Passwords are in \"pass\": \"google/tmux/<email>\".")
    error("")
    error("Arguments:")
    error("  --help   Print Help (this message)")
    error("  --force  Ignore the cached unread counts.")
    sys.exit(1)

# Check if the mail needs retrieving.
is_force = "--force" in sys.argv or "-f" in sys.argv
if not is_force:
    try:
        before, count = tmp("r").read().split(":")
        # Just send the cached value back.
        if now - int(before) < INTERVAL:
            print(count)
            sys.exit(0)
    except IOError:
        pass

def get_passwd(name):
    """

    Get the gmail password.

    """
    return subprocess.check_output([
        "pass", "google/tmux/" + name
    ]).decode("utf-8").strip()

def mailbox(username, password):
    """

    Connect to the server.

    """
    if password == "":
        return False
    try:
        m = imaplib.IMAP4_SSL("imap.gmail.com", 993)
        m.login(username, password)
        m.select("Inbox", readonly = True)
        return m
    except:
        return False

def unread(m):
    """

    Check the mail for the number of unread messages.

    """
    if not m:
        return "_"
    _, res = m.status("Inbox", "(UNSEEN)")
    count = re.search("UNSEEN (\d+)", res[0].decode("utf-8")).group(1)
    return count

def done(count):
    """

    Cache the results.

    """
    tmp("w").write(str(now) + ":" + str(count))
    print(count)


passwords = map(get_passwd, EMAILS)
unreads = []
for (u, p) in zip(USERNAMES, passwords):
    box = mailbox(u, p)
    unreads.append(unread(box))
done(",".join(unreads))
