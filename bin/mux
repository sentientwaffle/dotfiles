#!/bin/sh -eu

dir="$HOME/Bootstrap/data/mux"

usage() {
	cat <<-EOF
	usage: ${0##*/} [-e] [project]

	Set up a tmux window. If no "project" is passed, use fzy to select one.

	Arguments:
	  -e  open project config in editor

	Project options:
	  title  <title>              set the window title
	  cd     <directory>          change directories
	  run    <command> [arg1] ..  run a command
	  hsplit [percent]            left/right split
	  vsplit [percent]            top/bottom split
	  pane   <prev|next|{int}>    select a different pane
	  layout <{even,main}-{horizontal,vertical}|tiled>

	Project files are found in "$dir/mux/**.txt".
	EOF
}

if [ "${1:-}" = '-e' ]; then
	edit=1
	shift
else
	edit=0
fi

if [ $# -eq 0 ]; then
	project=$(_complete_files "$dir" txt | fzy)
elif [ "$1" = '-h' ]; then
	usage >&2
	exit 1
else
	project=$1
fi
file="$dir/$project.txt"

if [ $edit -eq 1 ]; then
	exec "${EDITOR:?}" -- "$file"
fi

tmux_split() {
	#tmux split-window "$1" -p "${2:-50}" -c '#{pane_current_path}'
	tmux split-window "$1" -p "${2:-50}" -c "$3"
}

tmux_pane() {
	case "$project" in
		next) t=':.+' ;;
		prev) t=':.-' ;;
		*)    t="$1"  ;;
	esac
	tmux select-pane -t "$t"
}

cwd=$(pwd)
while read -r cmd arg; do
	case $cmd in
		'#') ;; # ignore comments
		title)  tmux rename-window "$arg" ;;
		hsplit) tmux_split -h "$arg" "$cwd" ;;
		vsplit) tmux_split -v "$arg" "$cwd" ;;
		layout) tmux select-layout "$arg" ;;
		pane)   tmux_pane "$arg" ;;
		run)    tmux send-keys "$arg" C-m ;;
		cd)
			# Update `$cwd` to pass to `tmux_split` for new panes.
			new_cwd=$(printf "%s" "$arg" | sed "s#~#$HOME#")
			# `cd` into the old `$cwd` so `$new_cwd` resolves properly
			# when it is a relative path.
			cwd=$(cd "$cwd" && realpath "$new_cwd")
			# send-keys ensures that the current pane changes
			# directory.
			tmux send-keys "cd $arg" C-m
			;;
		*)
			echo "Unknown project option: \"$cmd\"" >&2
			exit 1
			;;
	esac
done < "$file"
